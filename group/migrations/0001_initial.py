# Generated by Django 5.2.1 on 2025-08-06 11:44

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0003_hashtag'),
        ('profiles', '0004_profile_mentor_mail_sent'),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('inactivated_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('type', models.CharField(choices=[('group', 'Group')], default='group', max_length=20)),
                ('description', models.TextField(max_length=500)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='group_logo/')),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='group_covers/')),
                ('member_count', models.PositiveIntegerField(default=1)),
                ('activity_score', models.FloatField(default=0.0)),
                ('last_activity', models.DateTimeField(auto_now_add=True)),
                ('featured', models.BooleanField(default=False)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_groups', to='profiles.profile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GroupPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('inactivated_at', models.DateTimeField(blank=True, null=True)),
                ('content', models.TextField()),
                ('media_file', models.FileField(blank=True, null=True, upload_to='group_media/')),
                ('is_pinned', models.BooleanField(default=False)),
                ('is_announcement', models.BooleanField(default=False)),
                ('likes_count', models.PositiveIntegerField(default=0)),
                ('comments_count', models.PositiveIntegerField(default=0)),
                ('share_count', models.PositiveIntegerField(default=0)),
                ('is_flagged', models.BooleanField(default=False)),
                ('flag_count', models.PositiveIntegerField(default=0)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='group.group')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profiles.profile')),
                ('tags', models.ManyToManyField(blank=True, to='core.hashtag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GroupPostComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('inactivated_at', models.DateTimeField(blank=True, null=True)),
                ('like_count', models.IntegerField(blank=True, null=True)),
                ('content', models.TextField()),
                ('group_post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='group.grouppost')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='group.grouppostcomment')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profiles.profile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GroupMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('inactivated_at', models.DateTimeField(blank=True, null=True)),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('moderator', 'Moderator'), ('contributor', 'Contributor'), ('viewer', 'Viewer')], max_length=20)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('is_banned', models.BooleanField(default=False)),
                ('top_contributor', models.BooleanField(default=False)),
                ('recent_activity_score', models.IntegerField(default=0)),
                ('assigned_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_roles', to='profiles.profile')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='group.group')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profiles.profile')),
            ],
            options={
                'unique_together': {('profile', 'group')},
            },
        ),
        migrations.CreateModel(
            name='GroupPostCommentLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('inactivated_at', models.DateTimeField(blank=True, null=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_likes', to='group.grouppostcomment')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profiles.profile')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('comment', 'profile'), name='unique_group_post_comment_like')],
            },
        ),
        migrations.CreateModel(
            name='GroupPostLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('inactivated_at', models.DateTimeField(blank=True, null=True)),
                ('group_post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_likes', to='group.grouppost')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='profiles.profile')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('group_post', 'profile'), name='unique_group_post_like')],
            },
        ),
    ]
